{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","items","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","handelSelecteTodo","TodoFilter","filterOption","query","setQuery","onChange","e","target","value","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","loading","setLoading","useEffect","userId","finally","href","email","name","App","todos","setTodos","filterBy","setFilterBy","filteredTodos","adaptedQuery","trim","toLowerCase","filter","includes","getFiltereredTodos","newQuery","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc7e35e9.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  items: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  items,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const handelSelecteTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map((todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td\n              className={`is-vcentered is-expanded ${todo.completed ? 'has-text-success' : 'has-text-danger'\n              }`}\n            >\n              <p\n                className={`${todo.completed ? 'has-text-success' : 'has-text-danger'\n                }`}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handelSelecteTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={`far fa-eye${selectedTodo?.id !== todo.id ? '' : '-slash'\n                    }`}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Filter } from '../../types/Filter';\n\ntype Props = {\n  filterOption: (filter: Filter) => void;\n  query: string;\n  setQuery: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterOption,\n  query,\n  setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={e => filterOption(e.target.value as Filter)}\n          >\n            <option value={Filter.All}>All</option>\n            <option value={Filter.Active}>Active</option>\n            <option value={Filter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo;\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(selectedTodo?.userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [selectedTodo]);\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n    setUser(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <span className=\"has-text-success\">Done</span>\n              ) : (\n                <span className=\"has-text-danger\">Planned</span>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\ninterface FilterParams {\n  filterBy: string,\n  query: string,\n}\n\nfunction getFiltereredTodos(\n  todos: Todo[],\n  { filterBy, query }: FilterParams,\n) {\n  let filteredTodos = [...todos];\n  const adaptedQuery = query.trim().toLowerCase();\n\n  switch (filterBy) {\n    case Filter.Active:\n      filteredTodos = todos.filter((todo) => !todo.completed);\n      break;\n\n    case Filter.Completed:\n      filteredTodos = todos.filter((todo) => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  if (adaptedQuery) {\n    return filteredTodos.filter((todo) => todo.title.toLowerCase().includes(adaptedQuery));\n  }\n\n  return filteredTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [filterBy, setFilterBy] = useState(Filter.All);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const filteredTodos = getFiltereredTodos(todos, { filterBy, query });\n\n  const handleQueryChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterOption={setFilterBy}\n                query={query}\n                setQuery={handleQueryChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  items={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}